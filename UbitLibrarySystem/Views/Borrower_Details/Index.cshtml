@using PagedList;
@using PagedList.Mvc;


@model IPagedList<UbitLibrarySystem.Models.Borrower_Details>

@{
    ViewBag.Title = "Index";
}
<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    #customers {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #customers td, #customers th {
            border: 1px solid #222d32;
            padding: 8px;
        }

        #customers tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #customers tr:hover {
            background-color: #ddd;
        }

        #customers th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #222d32;
            color: white;
        }
</style>


<p class="btn btn-info fa fa-edit">
    @Html.ActionLink("Create New", "Create", null, new { style = "color:black" })
</p>


    <div align="center">
        @using (Html.BeginForm("Index", "Borrower_Details", FormMethod.Get))
        {
            <b>Search By : </b>@Html.RadioButton("searchBy", "Id", true)<text> Id  </text>
                @Html.RadioButton("searchBy", "Name")<text> Name    </text>

                @Html.TextBox("search")<input type="submit" value="Search " id="search" class="btn btn-flat" />



        }
    </div>
    <br/>
    <br />
    <div style="overflow-x : auto">
    <table id="customers" >
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().Borrower_id)


                </th>

                <th>
                    @Html.ActionLink("Name", "Index", new
               {
                   sortBy = ViewBag.SortNameParameter
                  ,
                   searchBy = Request.QueryString["searchBy"],
                   search = Request["search"]
               },new {style = "color:white"})
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Borrowed_From_Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Borrowed_To_Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Book_Details.Book_Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().tblUser.email)
                </th>
                <th>Actions</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Borrower_id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Borrower_Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Borrowed_From_Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Borrowed_To_Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Book_Details.Book_Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tblUser.email)
                    </td>
                    <td >
                        @Html.ActionLink("Edit", "Edit", new { id = item.PKBorrower_id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.PKBorrower_id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.PKBorrower_id })
                    </td>
                </tr>
            }
        </tbody>
</table>


    <center>
        @Html.PagedListPager(Model, page =>
Url.Action("Index", new
{
    page,
    searchBy = Request.QueryString["searchBy"]
    ,
    search = Request.QueryString["search"],
    sortBy = Request["sortBy"]
}), new PagedListRenderOptions()
{ Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
    </center>

</div>

